import{_ as e,r as p,o,c,a as n,d as t,e as s,b as l}from"./app.634740c6.js";var i="/images/js\u4E8C\u8FDB\u5236\u64CD\u4F5C.drawio.png";const u={},r=n("p",null,"\u5BF9\u591A\u6570\u524D\u7AEF\u6765\u8BF4\uFF0C\u5728\u5E73\u5E38\u7684\u5DE5\u4F5C\u4E2D\u6BD4\u8F83\u5C11\u5728js\u4E2D\u64CD\u4F5C\u4E8C\u8FDB\u5236\u6570\u636E\uFF0C\u6240\u4EE5\u8FD9\u4E5F\u6210\u4E86\u975E\u5E38\u5BB9\u6613\u5FFD\u89C6\u7684\u4E00\u4E2A\u77E5\u8BC6\u70B9\uFF0C\u4ECA\u5929\u8FD9\u91CC\u5C31\u603B\u7ED3\u4E00\u4E0B\u8FD9\u4E9B\u5185\u5BB9\u3002",-1),k=n("p",null,"js\u5185\u7F6E\u4E86\u4E00\u4E9B\u5168\u5C40\u53D8\u91CF\uFF0C\u7528\u4E8E\u4E8C\u8FDB\u5236\u6570\u636E\u4EE5\u53CA\u5176\u76F8\u5173\u7684\u5904\u7406\uFF0C\u6BD4\u5982Blob, ArrayBuffer, Buffer\uFF08nodejs \u63D0\u4F9B\uFF09, File, FileReader, TypedArray, DataView\uFF0C\u5176\u4E2D\u7528\u7684\u76F8\u5BF9\u6BD4\u8F83\u591A\u7684\u5C31\u662F Blob, ArrayBuffer, File, FileReader\u3002\u4F7F\u7528\u573A\u666F\u901A\u5E38\u96C6\u4E2D\u5728\u6587\u4EF6\u7684\u4E0A\u4F20\uFF0C\u4E0B\u8F7D\uFF0C\u6587\u4EF6\u8F6C\u6362\u7B49\uFF0C\u4E0B\u9762\u6765\u5148\u6765\u51E0\u672C\u4E86\u89E3\u4E00\u4E0B\u8FD9\u4E9B\u7C7B\u578B",-1),d=s("Blob \u5B83\u662F\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\uFF0C\u539F\u59CB\u6570\u636E\u7684\u7C7B\u6587\u4EF6\u5BF9\u8C61\uFF0C\u5B83\u7684\u6570\u636E\u53EF\u4EE5\u6309\u6587\u672C\u6216\u4E8C\u8FDB\u5236\u7684\u683C\u5F0F\u8FDB\u884C\u8BFB\u53D6\uFF0C\u4E5F\u53EF\u4EE5\u8F6C\u6362\u6210 "),v={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/ReadableStream",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"ReadableStream",-1),m=s(" \u6765\u7528\u4E8E\u6570\u636E\u64CD\u4F5C"),f=s("File \u4ED6\u7EE7\u627F\u4E8E Blob \u5BF9\u8C61\uFF0C\u62E5\u6709 BLob\u5BF9\u8C61\u7684\u65B9\u6CD5\u4EE5\u53CA\u5C5E\u6027\uFF0C\u63D0\u4F9B\u6587\u4EF6\u76F8\u5173\u7684\u4FE1\u606F\uFF0C\u4ED6\u53EF\u4EE5\u662F\u7F51\u9875\u4E2D input[type=file]\u6807\u7B7E\u9009\u4E2D\u6587\u4EF6\u540E\u8FD4\u56DE\u7684 "),h={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/FileList",target:"_blank",rel:"noopener noreferrer"},y=n("code",null,"FileList",-1),w=s(" \u5BF9\u8C61\uFF0C\u4E5F\u53EF\u4EE5\u662F\u81EA\u7531\u62D6\u653E\u64CD\u4F5C\u751F\u6210\u7684 "),_={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/DataTransfer",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"DataTransfer",-1),B=s("\u5BF9\u8C61\uFF0C"),A=n("li",null,"ArrayBuffer \u7528\u6765\u8868\u793A\u901A\u7528\u7684\u3001\u56FA\u5B9A\u957F\u5EA6\u7684\u539F\u59CB\u4E8C\u8FDB\u5236\u6570\u636E\u7F13\u51B2\u533A\uFF0C\u4E5F\u53EF\u4EE5\u79F0\u5B83\u4E3A\u5B57\u8282\u6570\u7EC4\u3002\u6211\u4EEC\u5E76\u4E0D\u80FD\u76F4\u63A5\u64CD\u4F5C\u4ED6\uFF0C\u800C\u662F\u8981\u901A\u8FC7\u7C7B\u578B\u6570\u7EC4\u5BF9\u8C61 (TypedArray) \u6216\u8005\u662F DataView\u6765\u64CD\u4F5C",-1),x=n("li",null,"Buffer \u7531 nodejs \u63D0\u4F9B\uFF0C\u7528\u4E8E\u8868\u793A\u56FA\u5B9A\u957F\u5EA6\u7684\u5B57\u8282\u5E8F\u5217",-1),j=s("FileReader \u5B83\u5141\u8BB8Web\u5E94\u7528\u7A0B\u5E8F\u5F02\u6B65\u8BFB\u53D6\u5B58\u50A8\u5728\u7528\u6237\u8BA1\u7B97\u673A\u4E0A\u7684\u6587\u4EF6\uFF08\u6216\u539F\u59CB\u6570\u636E\u7F13\u51B2\u533A\uFF09\u7684\u5185\u5BB9\uFF0C\u4F7F\u7528 "),D={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/File",target:"_blank",rel:"noopener noreferrer"},F=n("code",null,"File",-1),I=s(" \u6216 "),z={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Blob",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"Blob",-1),R=s(" \u5BF9\u8C61\u6307\u5B9A\u8981\u8BFB\u53D6\u7684\u6587\u4EF6\u6216\u6570\u636E\u3002\u901A\u5E38\u90FD\u662F\u4F7F\u7528\u5B83\u6765\u505A\u6570\u636E\u7C7B\u578B\u7684\u8F6C\u6362"),T=n("li",null,"TypedArray \u7C7B\u578B\u5316\u6570\u7EC4\uFF0C\u5B9E\u9645\u4E0A\u5728\u5168\u5C40\u5E76\u6CA1\u6709\u4E00\u4E2A TypedArray \u7684\u5168\u5C40\u53D8\u91CF\uFF0C\u4ED6\u5B9E\u9645\u4E0A\u662F\u4E00\u7EC4\u7C7B\u578B\u6570\u7EC4\u7684\u7EDF\u79F0\uFF0C\u4E3B\u8981\u5305\u62EC\uFF1AInt8Array, Int16Array, Int32Array, Uint8Array, Uint16Array, Uint32Array, Float32Array, Float64Array\u7B49",-1),N=s("DataView \u662F\u4E00\u4E2A\u53EF\u4EE5\u4ECE\u4E8C\u8FDB\u5236"),V={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"ArrayBuffer",-1),U=s(" \u5BF9\u8C61\u4E2D\u8BFB\u5199\u591A\u79CD\u6570\u503C\u7C7B\u578B\u7684\u5E95\u5C42\u63A5\u53E3"),P=l('<p>\u4E0B\u56FE\u5448\u73B0\u4E86\u51E0\u79CD\u5E38\u7528\u5BF9\u8C61\u4E4B\u95F4\u7B49\u5173\u7CFB</p><p><img src="'+i+`" alt="js\u4E8C\u8FDB\u5236\u64CD\u4F5C.drawio"></p><p>\u4E0B\u9762\u5206\u522B\u6765\u4E00\u4E00\u4ECB\u7ECD\u8FD9\u4E9B\u5BF9\u8C61\u7B49\u7528\u6CD5\u53CA\u4F7F\u7528\u573A\u666F</p><h1 id="blob" tabindex="-1"><a class="header-anchor" href="#blob" aria-hidden="true">#</a> Blob</h1><p>\u4E0A\u9762\u6211\u4EEC\u8BF4\u5230 Blob \u662F\u4E00\u4E2A\u7C7B\u6587\u4EF6\u5BF9\u8C61\uFF0C\u6211\u4EEC\u901A\u8FC7 input[type=file]\u9009\u62E9\u7684\u6587\u4EF6\u4E5F\u662F\u7EE7\u627F\u81EA Blob \u7684\u3002\u6240\u4EE5\u6211\u4EEC\u4F7F\u7528\u5B83\u6765\u8FDB\u884C\u6587\u4EF6\u4E0A\u4F20\u548C\u4E0B\u8F7D</p><h2 id="blob-\u6587\u4EF6\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#blob-\u6587\u4EF6\u4E0A\u4F20" aria-hidden="true">#</a> Blob \u6587\u4EF6\u4E0A\u4F20</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">selectFile</span><span class="token punctuation">(</span><span class="token parameter">fileList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>file<span class="token punctuation">]</span> <span class="token operator">=</span> fileList
    <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/xxx&#39;</span><span class="token punctuation">,</span> form<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="blob-\u5206\u6BB5\u4E0A\u4F20" tabindex="-1"><a class="header-anchor" href="#blob-\u5206\u6BB5\u4E0A\u4F20" aria-hidden="true">#</a> Blob \u5206\u6BB5\u4E0A\u4F20</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">selectFile</span><span class="token punctuation">(</span><span class="token parameter">fileList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>file<span class="token punctuation">]</span> <span class="token operator">=</span> fileList
    <span class="token keyword">const</span> size <span class="token operator">=</span> file<span class="token punctuation">.</span>size
    <span class="token keyword">const</span> chunkSize <span class="token operator">=</span> <span class="token number">30</span>
    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">const</span> end <span class="token operator">=</span> start <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>chunkSize<span class="token punctuation">,</span> size <span class="token operator">-</span> start<span class="token punctuation">)</span>
            form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/xxx&#39;</span><span class="token punctuation">,</span> form<span class="token punctuation">)</span>
            start <span class="token operator">=</span> end
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="blob-\u4E0B\u8F7D\u4E8C\u8FDB\u5236\u6D41\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#blob-\u4E0B\u8F7D\u4E8C\u8FDB\u5236\u6D41\u6587\u4EF6" aria-hidden="true">#</a> Blob \u4E0B\u8F7D\u4E8C\u8FDB\u5236\u6D41\u6587\u4EF6</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">downLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/xxx&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;arraybuffer&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> url <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>res<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;application/pdf&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;download&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        a<span class="token punctuation">.</span>download <span class="token operator">=</span> <span class="token string">&quot;helloworld.pdf&quot;</span><span class="token punctuation">;</span>
        a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="blob-\u8F6C-data-url" tabindex="-1"><a class="header-anchor" href="#blob-\u8F6C-data-url" aria-hidden="true">#</a> Blob \u8F6C Data url</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u5C06Blob\u8F6C\u6362\u4E3A Data Url
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">streamData</span> 
 * <span class="token keyword">@returns</span> Promise&lt;DataUrl&gt;
 */</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">convertBlobToDataurl</span><span class="token punctuation">(</span><span class="token parameter">blob</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u8FDB\u5236\u6D41\u6570\u636E\u8F6C\u6362\u4E3A-data-url" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u8FDB\u5236\u6D41\u6570\u636E\u8F6C\u6362\u4E3A-data-url" aria-hidden="true">#</a> \u4E8C\u8FDB\u5236\u6D41\u6570\u636E\u8F6C\u6362\u4E3A Data url</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * \u5C06\u4E8C\u8FDB\u5236\u6D41\u8F6C\u6362\u4E3A base64
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">streamData</span> 
 * <span class="token keyword">@returns</span> 
 */</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">convertStreamDataToDataurl</span><span class="token punctuation">(</span>streamData<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&#39;application/pdf&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>streamData<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>type<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token function">convertBlobToDataurl</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="arraybuffer" tabindex="-1"><a class="header-anchor" href="#arraybuffer" aria-hidden="true">#</a> ArrayBuffer</h1><h2 id="arraybuffer-\u7684\u8BFB\u80FD\u529B" tabindex="-1"><a class="header-anchor" href="#arraybuffer-\u7684\u8BFB\u80FD\u529B" aria-hidden="true">#</a> ArrayBuffer \u7684\u8BFB\u80FD\u529B</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">selectFile</span><span class="token punctuation">(</span><span class="token parameter">fileList</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>file<span class="token punctuation">]</span> <span class="token operator">=</span> fileList
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  	fileReader<span class="token punctuation">.</span><span class="token function">readAsArrayBuffer</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="arraybuffer-\u7684\u5199\u80FD\u529B" tabindex="-1"><a class="header-anchor" href="#arraybuffer-\u7684\u5199\u80FD\u529B" aria-hidden="true">#</a> ArrayBuffer \u7684\u5199\u80FD\u529B</h2><p>\u4E0A\u9762\u8BF4\u5230\u7684 Blob\u4E3B\u8981\u662F\u9488\u5BF9\u6587\u4EF6\u4EE5\u53CA\u6570\u636E\u8F6C\u6362\u7684\u64CD\u4F5C\uFF0C\u5B83\u662F\u4E00\u4E2A\u4E0D\u53EF\u53D8\u7684\u5BF9\u8C61\uFF0C\u5982\u679C\u6211\u4EEC\u8981\u4FEE\u6539\u4E8C\u8FDB\u5236\u6570\u636E\u7684\u5185\u5BB9\uFF0C\u90A3\u6211\u4EEC\u5C31\u9700\u8981\u7528\u5230 ArrayBuffer\uFF0C\u4E0B\u9762\u901A\u8FC7\u4E00\u4E2A Int8Array \u53CA DataView \u6765\u4E3E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> typedArr1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Int8Array</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
typedArr1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">16</span>
typedArr1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">24</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>typedArr1<span class="token punctuation">)</span>
<span class="token comment">// output: Int8Array(8) [16, 24, 0, 0, 0, 0, 0, 0, buffer: ArrayBuffer(8), byteLength: 8, byteOffset: 0, length: 8]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataView</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">setInt8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>
view<span class="token punctuation">.</span><span class="token function">setInt8</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>view<span class="token punctuation">.</span><span class="token function">getInt8</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// output: DataView(16)</span>
<span class="token comment">// output: 16</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6CE8\u610F\u70B9\uFF1A\u867D\u7136 ArrayBuffer \u770B\u8D77\u6765\u50CF\u4E2A\u6570\u7EC4\uFF0C\u4F46\u662F\u4ED6\u548C\u6570\u7EC4\u8FD8\u662F\u6709\u5F88\u5927\u7684\u533A\u522B\uFF0C\u4E3B\u8981\u5B58\u5728\u4EE5\u4E0B\u51E0\u70B9</p><ol><li>ArrayBuffer \u662F\u4E00\u4E2A\u56FA\u5B9A\u957F\u5EA6\u7684\u4E8C\u8FDB\u5236\u7F13\u51B2\u533A\uFF0C\u4ED6\u7684\u5927\u5C0F\u5728\u521D\u59CB\u5316\u7684\u65F6\u5019\u5C31\u5DF2\u7ECF\u786E\u5B9A\u4E86\uFF0C\u800C\u6570\u7EC4\u53EF\u4EE5\u968F\u610F\u7684\u53D8\u6362\u5927\u5C0F</li><li>ArrayBuffer \u7F3A\u5C11 Array \u5E38\u89C1\u7684\u4E00\u4E9B api\uFF0C\u6BD4\u5982 push, pop, shift, unshift\u7B49</li><li>ArrayBuffer \u53EA\u80FD\u8BFB\uFF0C\u4E0D\u80FD\u5199\uFF0C\u5982\u679C\u8981\u4FEE\u6539\u6570\u636E\u5185\u5BB9\uFF0C\u9700\u8981\u8F6C\u6362\u6210 TypedArray \u6216\u8005 DataView</li></ol></blockquote><h1 id="buffer" tabindex="-1"><a class="header-anchor" href="#buffer" aria-hidden="true">#</a> Buffer</h1><p>Buffer \u662F Nodejs \u63D0\u4F9B\u7684\u5BF9\u8C61\uFF0C\u524D\u7AEF\u6CA1\u6709\u3002\u5B83\u4E00\u822C\u5E94\u7528\u4E8E IO \u64CD\u4F5C\uFF0C\u4F8B\u5982\u63A5\u6536\u524D\u7AEF\u8BF7\u6C42\u6570\u636E\u65F6\u5019\uFF0C\u53EF\u4EE5\u901A\u8FC7 Buffer \u7684 API \u5BF9\u63A5\u6536\u5230\u7684\u524D\u7AEF\u6570\u636E\u8FDB\u884C\u6574\u5408</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>exports<span class="token punctuation">.</span><span class="token function-variable function">getUploadData</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> chunk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
	req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">bf</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		chunk<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>bf<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token parameter">bf</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> bf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bf<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="\u672C\u6587\u5B8C" tabindex="-1"><a class="header-anchor" href="#\u672C\u6587\u5B8C" aria-hidden="true">#</a> \u672C\u6587\u5B8C</h1>`,27);function S(C,W){const a=p("ExternalLinkIcon");return o(),c("div",null,[r,k,n("ol",null,[n("li",null,[d,n("a",v,[b,t(a)]),m]),n("li",null,[f,n("a",h,[y,t(a)]),w,n("a",_,[g,t(a)]),B]),A,x,n("li",null,[j,n("a",D,[F,t(a)]),I,n("a",z,[L,t(a)]),R]),T,n("li",null,[N,n("a",V,[q,t(a)]),U])]),P])}var O=e(u,[["render",S],["__file","\u5728js\u4E2D\u4F7F\u7528\u4E8C\u8FDB\u5236\u6570\u636E.html.vue"]]);export{O as default};
