import{_ as n,o as s,c as a,e as t}from"./app.7690f8b0.js";const e={},p=t(`<h2 id="_1-\u5B57\u7B26\u7684unicode\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u5B57\u7B26\u7684unicode\u8868\u793A\u6CD5" aria-hidden="true">#</a> 1. \u5B57\u7B26\u7684unicode\u8868\u793A\u6CD5</h2><h2 id="_2-codepointat" tabindex="-1"><a class="header-anchor" href="#_2-codepointat" aria-hidden="true">#</a> 2. codePointAt()</h2><h2 id="_3-string-fromcodepoint" tabindex="-1"><a class="header-anchor" href="#_3-string-fromcodepoint" aria-hidden="true">#</a> 3. String.fromCodePoint()</h2><h2 id="_4-\u5B57\u7B26\u4E32\u904D\u5386\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_4-\u5B57\u7B26\u4E32\u904D\u5386\u63A5\u53E3" aria-hidden="true">#</a> 4. \u5B57\u7B26\u4E32\u904D\u5386\u63A5\u53E3</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> codePoint <span class="token keyword">of</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>codePoint<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// &quot;f&quot;</span>
    <span class="token comment">// &quot;o&quot;</span>
    <span class="token comment">// &quot;o&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-at" tabindex="-1"><a class="header-anchor" href="#_5-at" aria-hidden="true">#</a> 5. at()</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token string">&#39;abc&#39;</span><span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// &quot;a&quot;</span>
    <span class="token string">&#39;\u{20BB7}&#39;</span><span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// &quot;\u{20BB7}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-normalize" tabindex="-1"><a class="header-anchor" href="#_6-normalize" aria-hidden="true">#</a> 6. normalize()</h2><h2 id="_7-includes-startswith-endswith" tabindex="-1"><a class="header-anchor" href="#_7-includes-startswith-endswith" aria-hidden="true">#</a> 7. includes() startsWith() endsWith()</h2><blockquote><p>includes()\uFF1A\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u627E\u5230\u4E86\u53C2\u6570\u5B57\u7B26\u4E32\u3002 startsWith()\uFF1A\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u53C2\u6570\u5B57\u7B26\u4E32\u662F\u5426\u5728\u6E90\u5B57\u7B26\u4E32\u7684\u5934\u90E8\u3002 endsWith()\uFF1A\u8FD4\u56DE\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u53C2\u6570\u5B57\u7B26\u4E32\u662F\u5426\u5728\u6E90\u5B57\u7B26\u4E32\u7684\u5C3E\u90E8\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">;</span>

    s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    s<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    s<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-repeat" tabindex="-1"><a class="header-anchor" href="#_8-repeat" aria-hidden="true">#</a> 8. repeat</h2><blockquote><p>\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\uFF0C\u8868\u793A\u5C06\u539F\u5B57\u7B26\u4E32\u91CD\u590Dn\u6B21</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token string">&#39;x&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">// &quot;xxx&quot;</span>
    <span class="token string">&#39;hello&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// &quot;hellohello&quot;</span>
    <span class="token string">&#39;na&#39;</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// &quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-padstart-padend" tabindex="-1"><a class="header-anchor" href="#_9-padstart-padend" aria-hidden="true">#</a> 9. padStart padEnd</h2><blockquote><p>es2017\u5F15\u5165\u4E86\u5B57\u7B26\u4E32\u8865\u5168\u957F\u5EA6\u7684\u529F\u80FD\uFF0C\u5982\u679C\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u4E0D\u591F\u6307\u5B9A\u7684\u957F\u5EA6\uFF0C\u4F1A\u5728\u5934\u90E8\u6216\u8005\u5C3E\u90E8\u8865\u5168\uFF0CpadStart\u7528\u4E8E\u5934\u90E8\u8865\u5168\uFF0CendStart\u7528\u4E8E\u5C3E\u90E8\u8865\u5168</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token string">&#39;x&#39;</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;ababx&#39;</span>
    <span class="token string">&#39;x&#39;</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;abax&#39;</span>
    
    <span class="token string">&#39;x&#39;</span><span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;xabab&#39;</span>
    <span class="token string">&#39;x&#39;</span><span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;xaba&#39;</span>
    
    <span class="token comment">//\u5982\u679C\u539F\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u5927\u4E8E\u6216\u8005\u7B49\u4E8E\u6307\u5B9A\u7684\u6700\u5C0F\u957F\u5EA6\uFF0C\u5219\u8FD4\u56DE\u539F\u5B57\u7B26\u4E32</span>
    <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;ab&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;xxx&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-\u6A21\u677F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_10-\u6A21\u677F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 10. \u6A21\u677F\u5B57\u7B26\u4E32</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// \u666E\u901A\u5B57\u7B26\u4E32</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">In JavaScript &#39;\\n&#39; is a line-feed.</span><span class="token template-punctuation string">\`</span></span>
    
    <span class="token comment">// \u591A\u884C\u5B57\u7B26\u4E32</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">In JavaScript this is
    not legal.</span><span class="token template-punctuation string">\`</span></span>
    
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">string text line 1
    string text line 2</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token comment">// \u5B57\u7B26\u4E32\u4E2D\u5D4C\u5165\u53D8\u91CF</span>
    <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&quot;Bob&quot;</span><span class="token punctuation">,</span> time <span class="token operator">=</span> <span class="token string">&quot;today&quot;</span><span class="token punctuation">;</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, how are you </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-\u6A21\u677F\u7F16\u8BD1" tabindex="-1"><a class="header-anchor" href="#_11-\u6A21\u677F\u7F16\u8BD1" aria-hidden="true">#</a> 11. \u6A21\u677F\u7F16\u8BD1</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> template <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;ul&gt;
        &lt;% for(let i =0; i &lt; arr.length; i++){ %&gt;
            &lt;li&gt;&lt;%= arr[i] %&gt;&lt;/li&gt;
        &lt;% } %&gt;
    &lt;/ul&gt;</span><span class="token template-punctuation string">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),o=[p];function c(i,l){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","string.html.vue"]]);export{r as default};
