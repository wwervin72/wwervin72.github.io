import{_ as n,o as s,c as a,e as p}from"./app.659ada95.js";const t={},e=p(`<h4 id="_1-\u7ED3\u6784\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_1-\u7ED3\u6784\u89E3\u6790" aria-hidden="true">#</a> 1.\u7ED3\u6784\u89E3\u6790</h4><h5 id="_1-1-\u7528\u6765\u4EA4\u6362\u53D8\u91CF\u7684" tabindex="-1"><a class="header-anchor" href="#_1-1-\u7528\u6765\u4EA4\u6362\u53D8\u91CF\u7684" aria-hidden="true">#</a> 1.1 \u7528\u6765\u4EA4\u6362\u53D8\u91CF\u7684</h5><p>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u5F53\u4EA4\u6362\u4E24\u4E2A\u53D8\u91CF\u7684\u503C\u65F6\uFF0C\u9700\u8981\u521B\u5EFA\u4E00\u4E2A\u4E2D\u95F4\u53D8\u91CF\uFF0C\u6765\u505A\u4E34\u65F6\u63A5\u6536\uFF0C\u8FD9\u6837\u770B\u8D77\u6765\u4E5F\u6BD4\u8F83\u7E41\u7410\u3002\u4F7F\u7528\u7ED3\u6784\u8D4B\u503C\u5C31\u53EF\u4EE5\u5F88\u65B9\u4FBF\u7684\u5B8C\u6210\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u4EE5\u524D\u7684\u505A\u6CD5<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> temp<span class="token punctuation">;</span>
temp <span class="token operator">=</span> a<span class="token punctuation">;</span>
a <span class="token operator">=</span> b<span class="token punctuation">;</span>
b <span class="token operator">=</span> temp<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token comment">// 2, 1</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u4F7F\u7528\u7ED3\u6784\u8D4B\u503C<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>b<span class="token punctuation">,</span> a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token comment">// 2, 1</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u5E76\u4E14\u7ED3\u6784\u8D4B\u503C\u8FD8\u53EF\u4EE5\u7528\u4E8E\u4EA4\u6362\u591A\u4E2A\u53D8\u91CF\u7684\u503C<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>c<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">// 2, 3, 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-\u8BFB\u53D6\u4E00\u4E9B\u6570\u7EC4\u7684\u7279\u6B8A\u53D8\u91CF-\u5982\u679C\u4E0D\u5B58\u5728\u5219\u4F7F\u7528\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#_1-2-\u8BFB\u53D6\u4E00\u4E9B\u6570\u7EC4\u7684\u7279\u6B8A\u53D8\u91CF-\u5982\u679C\u4E0D\u5B58\u5728\u5219\u4F7F\u7528\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> 1.2 \u8BFB\u53D6\u4E00\u4E9B\u6570\u7EC4\u7684\u7279\u6B8A\u53D8\u91CF\uFF0C\u5982\u679C\u4E0D\u5B58\u5728\u5219\u4F7F\u7528\u9ED8\u8BA4\u503C</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u5982\u679C\u6211\u4EEC\u4E0D\u4E25\u683C\u533A\u5206 <span class="token keyword">null</span> <span class="token keyword">undefined</span> <span class="token boolean">false</span> <span class="token number">0</span> \u7B49\uFF0C\u53EF\u4EE5\u4F7F\u7528 <span class="token operator">||</span> \u64CD\u4F5C\u7B26\u6765\u5B9E\u73B0<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">undefined</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">&#39;a&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u5982\u679C\u60F3\u8981\u83B7\u53D6\u6570\u7EC4\u91CC\u7684 <span class="token keyword">null</span> <span class="token boolean">false</span> <span class="token number">0</span> \u7B49\u503C\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528\u7ED3\u6784\u89E3\u6790\u9ED8\u8BA4\u503C\u7684\u65B9\u5F0F\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u53EA\u8981\u5143\u7D20\u503C\u4E0D\u5168\u7B49\u4E8E <span class="token keyword">undefined</span> \u5219\u4E0D\u4F1A\u4F7F\u7528\u9ED8\u8BA4\u503C<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>b <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token comment">// white false 0 null</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u5982\u679C\u83B7\u53D6\u67D0\u4E2A\u5177\u4F53\u7684\u5143\u7D20\uFF0C\u53EF\u4EE5\u628A\u524D\u9762\u7684\u5143\u7D20\u901A\u8FC7<span class="token string">&quot;,&quot;</span>\u8DF3\u8FC7<span class="token operator">--</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-2-\u622A\u53D6\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_1-2-\u622A\u53D6\u6570\u7EC4" aria-hidden="true">#</a> 1.2 \u622A\u53D6\u6570\u7EC4</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u53EF\u4EE5\u4F7F\u7528\u4F20\u7EDF\u7684\u65B9\u5F0F\uFF0C\u6570\u7EC4 api\uFF1Aslice substring \u7B49<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u8FD9\u79CD\u65B9\u5F0F\u53EA\u80FD\u622A\u53D6\u6570\u7EC4\u7684\u6307\u5B9A\u4E0B\u6807\u5230\u7ED3\u5C3E\uFF0C\u4E0D\u80FD\u622A\u53D6\u4E2D\u95F4\u5B57\u7B26\u4E32\uFF0C\u8BE5\u65B9\u5F0F\u53EF\u4EE5\u622A\u53D6\u591A\u4E2A\u5B50\u5B57\u7B26\u4E32\uFF0C\u5E76\u4E14\u4E0D\u4F1A\u4FEE\u6539\u539F\u6570\u7EC4\u7684\u503C<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// [3, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-3-\u62F7\u8D1D\u5BF9\u8C61\u4E00\u4E9B\u6307\u5B9A\u5C5E\u6027\u4E4B\u5916\u7684\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#_1-3-\u62F7\u8D1D\u5BF9\u8C61\u4E00\u4E9B\u6307\u5B9A\u5C5E\u6027\u4E4B\u5916\u7684\u5C5E\u6027" aria-hidden="true">#</a> 1.3 \u62F7\u8D1D\u5BF9\u8C61\u4E00\u4E9B\u6307\u5B9A\u5C5E\u6027\u4E4B\u5916\u7684\u5C5E\u6027</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u4E00\u822C\u65B9\u6CD5<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
<span class="token keyword">delete</span> b<span class="token punctuation">.</span>a
<span class="token keyword">delete</span> b<span class="token punctuation">.</span>b
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// {c: 3}</span>

<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u4F7F\u7528\u7ED3\u6784\u89E3\u6790<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> <span class="token punctuation">{</span>a1<span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">}</span> <span class="token operator">=</span> a
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// {c: 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-4-\u89E3\u6784\u53EF\u8FED\u4EE3\u5668\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_1-4-\u89E3\u6784\u53EF\u8FED\u4EE3\u5668\u5BF9\u8C61" aria-hidden="true">#</a> 1.4 \u89E3\u6784\u53EF\u8FED\u4EE3\u5668\u5BF9\u8C61</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u5B9E\u73B0\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">next</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">--</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> i<span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u4F7F\u7528\u89E3\u6784\u89E3\u6790<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u6CE8\u610F\u8FD9\u4E2A\u8FED\u4EE3\u5668\u53EA\u80FD\u8FED\u4EE3\u4E00\u6B21\uFF0C\u5982\u679C\u524D\u9762\u4F7F\u7528 <span class="token keyword">for</span> <span class="token keyword">of</span> \u8FED\u4EE3\u8FC7 a \u4E86\uFF0C\u5219\u540E\u9762\u8F93\u51FA\u7684\u90FD\u662F <span class="token keyword">undefined</span><span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1-5-\u83B7\u53D6\u52A8\u6001\u5C5E\u6027\u7684\u503C" tabindex="-1"><a class="header-anchor" href="#_1-5-\u83B7\u53D6\u52A8\u6001\u5C5E\u6027\u7684\u503C" aria-hidden="true">#</a> 1.5 \u83B7\u53D6\u52A8\u6001\u5C5E\u6027\u7684\u503C</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">greet</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> dynamicProp</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u5982\u679C\u4E0D\u5B58\u5728 nameProp \u5C5E\u6027\uFF0C\u5219\u8FD4\u56DE\u9ED8\u8BA4\u503C\uFF0C\u8BE5\u9ED8\u8BA4\u503C\u53EA\u4F1A\u5339\u914D <span class="token keyword">undefined</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>dynamicProp<span class="token punctuation">]</span><span class="token operator">:</span> defaultValue <span class="token operator">=</span> <span class="token string">&#39;unknown&#39;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
    <span class="token keyword">return</span> defaultValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">456</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token comment">// unknown</span>
<span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">456</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token comment">// null</span>
<span class="token function">greet</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">456</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span> <span class="token comment">// unknown</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2-\u6570\u7EC4\u53BB\u91CD\u5E38\u7528\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u6570\u7EC4\u53BB\u91CD\u5E38\u7528\u65B9\u6CD5" aria-hidden="true">#</a> 2 \u6570\u7EC4\u53BB\u91CD\u5E38\u7528\u65B9\u6CD5</h5><h6 id="_2-1-reduce" tabindex="-1"><a class="header-anchor" href="#_2-1-reduce" aria-hidden="true">#</a> 2.1 reduce</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>
arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>acc<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> acc<span class="token punctuation">[</span>acc<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        acc<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>  
    <span class="token punctuation">}</span>
    retrun acc
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3-\u5C06\u6D6E\u70B9\u6570\u70B9\u5DE6\u8FB9\u7684\u6570\u6BCF\u4E09\u4F4D\u6DFB\u52A0\u4E00\u4E2A\u9017\u53F7" tabindex="-1"><a class="header-anchor" href="#_3-\u5C06\u6D6E\u70B9\u6570\u70B9\u5DE6\u8FB9\u7684\u6570\u6BCF\u4E09\u4F4D\u6DFB\u52A0\u4E00\u4E2A\u9017\u53F7" aria-hidden="true">#</a> 3. \u5C06\u6D6E\u70B9\u6570\u70B9\u5DE6\u8FB9\u7684\u6570\u6BCF\u4E09\u4F4D\u6DFB\u52A0\u4E00\u4E2A\u9017\u53F7</h5><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> num <span class="token operator">&amp;&amp;</span> num<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>
        <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d)(?=(\\d{3})+\\.)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">$1<span class="token punctuation">,</span> $2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> $2 <span class="token operator">+</span> <span class="token string">&#39;,&#39;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u6574\u6570\u6B63\u5219<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d)(?=(?:\\d{3})+$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$1,&#39;</span><span class="token punctuation">)</span><span class="token operator">--</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-\u6241\u5E73\u5316\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_4-\u6241\u5E73\u5316\u6570\u7EC4" aria-hidden="true">#</a> 4. \u6241\u5E73\u5316\u6570\u7EC4</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">function</span> <span class="token function">deepFlat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">deepFlat</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            acc<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> acc
    <span class="token punctuation">}</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token function">deepFlat</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 1, 2, 3, 4, 5, 6 ]</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u4E5F\u53EF\u4EE5\u4F7F\u7528 es6 \u7684\u65B9\u6CD5<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">Infinity</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-\u5C06-list-\u8F6C\u6210\u6210-tree" tabindex="-1"><a class="header-anchor" href="#_5-\u5C06-list-\u8F6C\u6210\u6210-tree" aria-hidden="true">#</a> 5. \u5C06 list \u8F6C\u6210\u6210 tree</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">treeParse</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> link <span class="token operator">=</span> <span class="token string">&#39;parentId&#39;</span><span class="token punctuation">,</span> sort <span class="token operator">=</span> <span class="token string">&#39;sort&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">[</span>link<span class="token punctuation">]</span> <span class="token operator">!==</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span> 
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a<span class="token punctuation">[</span>sort<span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span>sort<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token operator">...</span>el<span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token function">treeParse</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> el<span class="token punctuation">.</span>id<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> list <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token literal-property property">parentId</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">sort</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">treeParse</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [{&quot;id&quot;:1,&quot;parentId&quot;:null,&quot;sort&quot;:0,&quot;children&quot;:[{&quot;id&quot;:3,&quot;parentId&quot;:1,&quot;sort&quot;:1,&quot;children&quot;:[]},{&quot;id&quot;:2,&quot;parentId&quot;:1,&quot;sort&quot;:2,&quot;children&quot;:[{&quot;id&quot;:4,&quot;parentId&quot;:2,&quot;sort&quot;:0,&quot;children&quot;:[{&quot;id&quot;:7,&quot;parentId&quot;:4,&quot;sort&quot;:2,&quot;chil</span>
dren<span class="token string">&quot;:[]}]},{&quot;</span>id<span class="token string">&quot;:6,&quot;</span>parentId<span class="token string">&quot;:2,&quot;</span>sort<span class="token string">&quot;:2,&quot;</span>children<span class="token string">&quot;:[]},{&quot;</span>id<span class="token string">&quot;:5,&quot;</span>parentId<span class="token string">&quot;:2,&quot;</span>sort<span class="token string">&quot;:3,&quot;</span>children&quot;<span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-\u8BA1\u7B97\u51FD\u6570\u6267\u884C\u82B1\u8D39\u65F6\u95F4" tabindex="-1"><a class="header-anchor" href="#_6-\u8BA1\u7B97\u51FD\u6570\u6267\u884C\u82B1\u8D39\u65F6\u95F4" aria-hidden="true">#</a> 6. \u8BA1\u7B97\u51FD\u6570\u6267\u884C\u82B1\u8D39\u65F6\u95F4</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">timeTaken</span> <span class="token operator">=</span> <span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token string">&#39;timeTaken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">timeEnd</span><span class="token punctuation">(</span><span class="token string">&#39;timeTaken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> r<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-\u83B7\u53D6\u5B57\u7B26\u4E32\u7684\u5B57\u8282\u957F\u5EA6" tabindex="-1"><a class="header-anchor" href="#_7-\u83B7\u53D6\u5B57\u7B26\u4E32\u7684\u5B57\u8282\u957F\u5EA6" aria-hidden="true">#</a> 7. \u83B7\u53D6\u5B57\u7B26\u4E32\u7684\u5B57\u8282\u957F\u5EA6</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">byteSize</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>str<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>size<span class="token punctuation">;</span>
<span class="token function">byteSize</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_8-\u751F\u6210\u6307\u5B9A\u8303\u56F4\u7684\u968F\u673A\u6574\u6570" tabindex="-1"><a class="header-anchor" href="#_8-\u751F\u6210\u6307\u5B9A\u8303\u56F4\u7684\u968F\u673A\u6574\u6570" aria-hidden="true">#</a> 8. \u751F\u6210\u6307\u5B9A\u8303\u56F4\u7684\u968F\u673A\u6574\u6570</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">randomIntegerInRange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>

<span class="token function">randomIntegerInRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_9-\u56DB\u820D\u4E94\u5165\u5230\u6307\u5B9A\u4F4D\u6570" tabindex="-1"><a class="header-anchor" href="#_9-\u56DB\u820D\u4E94\u5165\u5230\u6307\u5B9A\u4F4D\u6570" aria-hidden="true">#</a> 9. \u56DB\u820D\u4E94\u5165\u5230\u6307\u5B9A\u4F4D\u6570</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">round</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> decimals <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>n<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">e</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>decimals<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">e-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>decimals<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">round</span><span class="token punctuation">(</span><span class="token number">1.005</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.01</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_10-\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F" tabindex="-1"><a class="header-anchor" href="#_10-\u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F" aria-hidden="true">#</a> 10. \u8FD4\u56DE\u6307\u5B9A\u5143\u7D20\u7684\u751F\u6548\u6837\u5F0F</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> ruleName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">[</span>ruleName<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token function">getStyle</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;font-size&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;16px&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_11-\u5728\u6307\u5B9A\u5143\u7D20\u4E4B\u540E\u63D2\u5165\u65B0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#_11-\u5728\u6307\u5B9A\u5143\u7D20\u4E4B\u540E\u63D2\u5165\u65B0\u5143\u7D20" aria-hidden="true">#</a> 11. \u5728\u6307\u5B9A\u5143\u7D20\u4E4B\u540E\u63D2\u5165\u65B0\u5143\u7D20</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> html</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    el<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">&#39;afterend&#39;</span><span class="token punctuation">,</span> html<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &lt;div id=&quot;myId&quot;&gt;...&lt;/div&gt; &lt;p&gt;after&lt;/p&gt;</span>
<span class="token function">insertAfter</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;p&gt;after&lt;/p&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_12-\u5E73\u6ED1\u6EDA\u52A8\u81F3\u9876\u90E8" tabindex="-1"><a class="header-anchor" href="#_12-\u5E73\u6ED1\u6EDA\u52A8\u81F3\u9876\u90E8" aria-hidden="true">#</a> 12.\u5E73\u6ED1\u6EDA\u52A8\u81F3\u9876\u90E8</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop
    <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>scrollToTop<span class="token punctuation">)</span>
        window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> c <span class="token operator">-</span> c <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u6216\u8005\u76F4\u63A5\u4F7F\u7528 window<span class="token punctuation">.</span>scrollTo<span class="token operator">--</span><span class="token operator">&gt;</span>
window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
    <span class="token literal-property property">behavior</span><span class="token operator">:</span> <span class="token string">&#39;smooth&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_13-\u6279\u91CF\u987A\u5E8F\u6267\u884C\u591A\u4E2A-promise" tabindex="-1"><a class="header-anchor" href="#_13-\u6279\u91CF\u987A\u5E8F\u6267\u884C\u591A\u4E2A-promise" aria-hidden="true">#</a> 13. \u6279\u91CF\u987A\u5E8F\u6267\u884C\u591A\u4E2A Promise</h4><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">runPromisesInSeries</span> <span class="token punctuation">(</span><span class="token parameter">ps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ps<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">delay</span> <span class="token operator">=</span> <span class="token parameter">d</span> <span class="token operator">=&gt;</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=&gt;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">runPromisesInSeries</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="14"><li>\u83B7\u53D6\u8282\u70B9\u5728\u8BE5\u7236\u8282\u70B9\u4E0B\u7684\u5750\u6807</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">index</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>el<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>el <span class="token operator">=</span> el<span class="token punctuation">.</span>previousElementSibling<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        i<span class="token operator">++</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> i
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="15"><li>\u5982\u4F55\u786E\u5B9A\u8BBE\u5907\u662F\u79FB\u52A8\u8BBE\u5907\u8FD8\u662F\u53F0\u5F0F\u673A/\u7B14\u8BB0\u672C\u7535\u8111\uFF1F</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">detectDeviceType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span>
    <span class="token operator">?</span> <span class="token string">&#39;Mobile&#39;</span>
    <span class="token operator">:</span> <span class="token string">&#39;Desktop&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E8B\u4F8B</span>
<span class="token function">detectDeviceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Mobile&quot; or &quot;Desktop&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43),o=[e];function c(l,u){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","1.html.vue"]]);export{r as default};
