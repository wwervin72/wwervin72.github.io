import{_ as n,o as s,c as a,e as p}from"./app.09fb4218.js";const t={},o=p(`<h4 id="_1-\u6A21\u62DF-array-prototype-map-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u6A21\u62DF-array-prototype-map-\u65B9\u6CD5" aria-hidden="true">#</a> 1. \u6A21\u62DF Array.prototype.map \u65B9\u6CD5</h4><p>\u4E3B\u8981\u5B9E\u73B0\u529F\u80FD\uFF0C\u4EE5\u53CA\u9700\u8981\u6CE8\u610F\u70B9</p><ol><li>\u56DE\u8C03\u51FD\u6570\u53C2\u6570\u6709\u54EA\u4E9B\uFF0C\u4EE5\u53CA\u8FD4\u56DE\u503C\u8BE5\u600E\u4E48\u5904\u7406</li><li>\u4E0D\u4FEE\u6539\u539F\u6765\u7684\u6570\u7EC4</li></ol><p>\u5173\u4E8E map \u51FD\u6570\u7684\u51E0\u4E2A\u53C2\u6570</p><blockquote><ol><li>cb: \u751F\u6210\u65B0\u5143\u7D20\u7684\u51FD\u6570\uFF0C\u63A5\u6536\u4E09\u4E2A\u53C2\u6570<br> 1.1 ele: cb \u65B9\u6CD5\u4E2D\uFF0C\u5F53\u524D\u6B63\u5728\u5904\u7406\u7684\u6570\u7EC4\u4E2D\u7684\u5143\u7D20<br> 1.2 index: cb \u65B9\u6CD5\u4E2D\uFF0C\u5F53\u524D\u6B63\u5728\u5904\u7406\u7684\u6570\u7EC4\u4E2D\u5143\u7D20\u7684\u7D22\u5F15<br> 1.3 array: map \u65B9\u6CD5\u88AB\u8C03\u7528\u7684\u6570\u7EC4</li><li>context: \u6267\u884C cb \u51FD\u6570\u65F6\u4F7F\u7528\u7684 this \u503C</li></ol></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myMap</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u62F7\u8D1D\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token keyword">var</span> temp <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> temp<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-\u6A21\u62DF\u5B9E\u73B0-array-prototype-reduce" tabindex="-1"><a class="header-anchor" href="#_2-\u6A21\u62DF\u5B9E\u73B0-array-prototype-reduce" aria-hidden="true">#</a> 2. \u6A21\u62DF\u5B9E\u73B0 Array.prototype.reduce</h4><p>\u8BE5\u65B9\u6CD5\u5BF9\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u6267\u884C\u4E00\u4E2A\u6211\u4EEC\u63D0\u4F9B\u7684 <em><strong>reducer</strong></em> \u51FD\u6570(\u5347\u5E8F\u6267\u884C)\uFF0C\u5E76\u5C06\u5176\u7ED3\u679C\u6C47\u603B\u4E3A\u5355\u4E2A\u8FD4\u56DE\u503C</p><p>reduce \u5171\u63A5\u53D72\u4E2A\u53C2\u6570</p><blockquote><ol><li>cb \u6BCF\u6B21\u904D\u5386\u6570\u7EC4\u540E\u6267\u884C\u7684 callback\uFF0C\u8BE5\u65B9\u6CD5\u63A5\u6536\u4E09\u4E2A\u53C2\u6570<br> 1.1 Accumulator \u5B83\u662F\u4E0A\u4E00\u6B21\u8C03\u7528\u56DE\u8C03\u65F6\u8FD4\u56DE\u7684\u7D2F\u79EF\u503C\uFF0C \u6216 initialValue\uFF0C\u5982\u679C\u6CA1\u6709\u4F20\u5165 initialValue\uFF0C\u5219\u4F7F\u7528\u6E90\u6570\u7EC4\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20\u4F5C\u4E3A\u521D\u59CB\u503C\uFF0C \u6700\u7EC8\u4F1A\u5C06\u8FD9\u4E2A\u503C\u8FD4\u56DE,\u5728\u6CA1\u6709\u521D\u59CB\u503C\u7684\u7A7A\u6570\u7EC4\u4E0A\u8C03\u7528 reduce \u5C06\u62A5\u9519\uFF0C\u5982\u679C\u662F\u5BF9\u8C61\u6570\u7EC4\uFF0C\u5219\u5E94\u8BE5\u5FC5\u987B\u4F20\u5165\u521D\u59CB\u503C<br> 1.2 currentValue \u5F53\u524D\u5143\u7D20\uFF0C\u5347\u5E8F\u904D\u5386\u6570\u7EC4\u91CC\u7684\u6BCF\u4E2A\u5143\u7D20<br> 1.3 currentIndex \u5F53\u524D\u5143\u7D20\u7684\u7D22\u5F15\uFF0C\u5982\u679C\u63D0\u4F9B\u4E86 initialValue\uFF0C \u5219\u8D77\u59CB\u7D22\u5F15\u53F7\u4E3A0\uFF0C\u5426\u5219\u4E3A1</li><li>source array \u6E90\u6570\u7EC4\uFF0Creduce \u65B9\u6CD5\u88AB\u8C03\u7528\u7684\u6570\u7EC4</li></ol></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u4F7F\u7528\u65B9\u6CD5<span class="token operator">--</span><span class="token operator">&gt;</span>
arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span>accumulator<span class="token punctuation">,</span> currentValue<span class="token punctuation">[</span><span class="token punctuation">,</span> index<span class="token punctuation">[</span><span class="token punctuation">,</span> array<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">,</span> initialValue<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>\u6A21\u62DF\u5B9E\u73B0<span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myReduce</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">cb<span class="token punctuation">,</span> init</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;reduce can not called on null or undefined&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> callback <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span>cb <span class="token operator">+</span> <span class="token string">&quot; is not function&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> res<span class="token punctuation">,</span> startIndex
    res <span class="token operator">=</span> init <span class="token operator">?</span> init <span class="token operator">:</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    startIndex <span class="token operator">=</span> init <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> res<span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),e=[o];function c(l,u){return s(),a("div",null,e)}var r=n(t,[["render",c],["__file","\u4E00\u4E9B\u65B9\u6CD5\u5B9E\u73B0.html.vue"]]);export{r as default};
