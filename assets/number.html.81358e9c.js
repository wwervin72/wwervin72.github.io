import{_ as n,o as s,c as a,e}from"./app.09fb4218.js";const t={},p=e(`<h2 id="_1-\u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u7684\u8868\u793A\u6CD5" tabindex="-1"><a class="header-anchor" href="#_1-\u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u7684\u8868\u793A\u6CD5" aria-hidden="true">#</a> 1. \u4E8C\u8FDB\u5236\u548C\u516B\u8FDB\u5236\u7684\u8868\u793A\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token number">0b111110111</span> <span class="token operator">===</span> <span class="token number">503</span> <span class="token comment">// true</span>
    <span class="token number">0o767</span> <span class="token operator">===</span> <span class="token number">503</span> <span class="token comment">// true</span>
    
    <span class="token comment">// \u975E\u4E25\u683C\u6A21\u5F0F</span>
    <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0o11</span> <span class="token operator">===</span> <span class="token number">011</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    
    <span class="token comment">// \u4E25\u683C\u6A21\u5F0F</span>
    <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0o11</span> <span class="token operator">===</span> <span class="token number">011</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Uncaught SyntaxError: Octal literals are not allowed </span>
    
    <span class="token comment">//\u5982\u679C\u8981\u5C060b\u548C0o\u524D\u7F00\u7684\u5B57\u7B26\u4E32\u6570\u503C\u8F6C\u4E3A\u5341\u8FDB\u5236\uFF0C\u8981\u4F7F\u7528Number\u65B9\u6CD5\u3002</span>

    <span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;0b111&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 7</span>
    <span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">&#39;0o10&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-number-isfinite-number-isnan" tabindex="-1"><a class="header-anchor" href="#_2-number-isfinite-number-isnan" aria-hidden="true">#</a> 2. Number.isFinite(), Number.isNaN()</h2><blockquote><p>Number.isFinite()\u7528\u6765\u68C0\u67E5\u4E00\u4E2A\u6570\u503C\u662F\u5426\u4E3A\u6709\u9650\u7684\uFF08finite\uFF09\u3002\u5BF9\u4E8E\u975E\u6570\u503C\u4E00\u5F8B\u8FD4\u56DEfalse</p></blockquote><blockquote><p>Number.isNaN()\u7528\u6765\u68C0\u67E5\u4E00\u4E2A\u503C\u662F\u5426\u4E3ANaN\u3002\u53EA\u6709\u5BF9\u4E8ENaN\u624D\u8FD4\u56DEtrue</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    <span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&quot;25&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    Number<span class="token punctuation">.</span><span class="token function">isFinite</span><span class="token punctuation">(</span><span class="token string">&quot;25&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
    
    <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;NaN&quot;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">&quot;NaN&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
    Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-number-parseint-number-parsefloat" tabindex="-1"><a class="header-anchor" href="#_3-number-parseint-number-parsefloat" aria-hidden="true">#</a> 3. Number.parseInt Number.parseFloat</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token comment">// ES5\u7684\u5199\u6CD5</span>
    <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12.34&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 12</span>
    <span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;123.45#&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123.45</span>
    
    <span class="token comment">// ES6\u7684\u5199\u6CD5</span>
    Number<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">&#39;12.34&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 12</span>
    Number<span class="token punctuation">.</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">&#39;123.45#&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 123.45</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-number-isinteger" tabindex="-1"><a class="header-anchor" href="#_4-number-isinteger" aria-hidden="true">#</a> 4. Number.isInteger</h2><blockquote><p>umber.isInteger()\u7528\u6765\u5224\u65AD\u4E00\u4E2A\u503C\u662F\u5426\u4E3A\u6574\u6570\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5728JavaScript\u5185\u90E8\uFF0C\u6574\u6570\u548C\u6D6E\u70B9\u6570\u662F\u540C\u6837\u7684\u50A8\u5B58\u65B9\u6CD5\uFF0C\u6240\u4EE53\u548C3.0\u88AB\u89C6\u4E3A\u540C\u4E00\u4E2A\u503C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25.0</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
    Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token number">25.1</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
    Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
    Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-number-epsilon" tabindex="-1"><a class="header-anchor" href="#_5-number-epsilon" aria-hidden="true">#</a> 5. Number.EPSILON</h2><h2 id="_6-number-issafeinteger" tabindex="-1"><a class="header-anchor" href="#_6-number-issafeinteger" aria-hidden="true">#</a> 6. Number.isSafeInteger</h2><blockquote><p>JavaScript\u80FD\u591F\u51C6\u786E\u8868\u793A\u7684\u6574\u6570\u8303\u56F4\u5728-2^53\u52302^53\u4E4B\u95F4\uFF08\u4E0D\u542B\u4E24\u4E2A\u7AEF\u70B9\uFF09\uFF0C\u8D85\u8FC7\u8FD9\u4E2A\u8303\u56F4\uFF0C\u65E0\u6CD5\u7CBE\u786E\u8868\u793A\u8FD9\u4E2A\u503C\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token comment">// 9007199254740992</span>

    <span class="token number">9007199254740992</span>  <span class="token comment">// 9007199254740992</span>
    <span class="token number">9007199254740993</span>  <span class="token comment">// 9007199254740992</span>
    
    Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">===</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-math\u5BF9\u8C61\u7684\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_7-math\u5BF9\u8C61\u7684\u6269\u5C55" aria-hidden="true">#</a> 7. Math\u5BF9\u8C61\u7684\u6269\u5C55</h2><blockquote><p>Math.trunc\u65B9\u6CD5\u7528\u4E8E\u53BB\u9664\u4E00\u4E2A\u6570\u7684\u5C0F\u6570\u90E8\u5206\uFF0C\u8FD4\u56DE\u6574\u6570\u90E8\u5206\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">4.1</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>
    Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token number">4.9</span><span class="token punctuation">)</span> <span class="token comment">// 4</span>
    Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4.1</span><span class="token punctuation">)</span> <span class="token comment">// -4</span>
    Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4.9</span><span class="token punctuation">)</span> <span class="token comment">// -4</span>
    Math<span class="token punctuation">.</span><span class="token function">trunc</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1234</span><span class="token punctuation">)</span> <span class="token comment">// -0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-math-sign" tabindex="-1"><a class="header-anchor" href="#_8-math-sign" aria-hidden="true">#</a> 8. Math.sign</h2><blockquote><p>Math.sign\u65B9\u6CD5\u7528\u6765\u5224\u65AD\u4E00\u4E2A\u6570\u5230\u5E95\u662F\u6B63\u6570\u3001\u8D1F\u6570\u3001\u8FD8\u662F\u96F6\u3002</p></blockquote><blockquote><p>\u53C2\u6570\u4E3A\u6B63\u6570\uFF0C\u8FD4\u56DE+1\uFF1B \u53C2\u6570\u4E3A\u8D1F\u6570\uFF0C\u8FD4\u56DE-1\uFF1B \u53C2\u6570\u4E3A0\uFF0C\u8FD4\u56DE0\uFF1B \u53C2\u6570\u4E3A-0\uFF0C\u8FD4\u56DE-0; \u5176\u4ED6\u503C\uFF0C\u8FD4\u56DENaN\u3002</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// -1</span>
    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment">// +1</span>
    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// +0</span>
    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// -0</span>
    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span> <span class="token comment">// NaN</span>
    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span>
    Math<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// NaN</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-math-cbrt" tabindex="-1"><a class="header-anchor" href="#_9-math-cbrt" aria-hidden="true">#</a> 9. Math.cbrt</h2><blockquote><p>Math.cbrt\u65B9\u6CD5\u7528\u4E8E\u8BA1\u7B97\u4E00\u4E2A\u6570\u7684\u7ACB\u65B9\u6839\u3002</p></blockquote><h2 id="_10-\u6307\u6570\u8FD0\u7B97" tabindex="-1"><a class="header-anchor" href="#_10-\u6307\u6570\u8FD0\u7B97" aria-hidden="true">#</a> 10. \u6307\u6570\u8FD0\u7B97</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token comment">// 4</span>
    <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">3</span> <span class="token comment">// 8</span>
    
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1.5</span><span class="token punctuation">;</span>
    a <span class="token operator">**=</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B49\u540C\u4E8E a = a * a;</span>
    
    <span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
    b <span class="token operator">**=</span> <span class="token number">3</span><span class="token punctuation">;</span>
    <span class="token comment">// \u7B49\u540C\u4E8E b = b * b * b;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),c=[p];function o(i,u){return s(),a("div",null,c)}var r=n(t,[["render",o],["__file","number.html.vue"]]);export{r as default};
